{"version":3,"sources":["../../../../dist-esnext/app/dataAccess/schemas/UserSchema.js"],"names":["mongoose","mongooseInstance","mongooseConnection","UserSchema","schema","Schema","name","type","String","required","password","admin","Boolean","model"],"mappings":";;;;;;;;AAAA;;;;;;;;AACA,IAAMA,WAAW,qBAAWC,gBAA5B;AACA,IAAMC,qBAAqB,qBAAWA,kBAAtC;;IACMC,U;;;;;;;4BACkB;AAChB,gBAAMC,SAASJ,SAASK,MAAT,CAAgB;AAC3BC,sBAAM;AACFC,0BAAMC,MADJ;AAEFC,8BAAU;AAFR,iBADqB;AAK3BC,0BAAU;AACNH,0BAAMC,MADA;AAENC,8BAAU;AAFJ,iBALiB;AAS3BE,uBAAO;AACHJ,0BAAMK,OADH;AAEHH,8BAAU;AAFP;AAToB,aAAhB,CAAf;AAcA,mBAAOL,MAAP;AACH;;;;;;AAEL,IAAMA,SAASF,mBAAmBW,KAAnB,CAAyB,OAAzB,EAAkCV,WAAWC,MAA7C,CAAf;kBACeA,M;AACf","file":"UserSchema.js","sourcesContent":["import DataAccess from '../DataAccess';\nconst mongoose = DataAccess.mongooseInstance;\nconst mongooseConnection = DataAccess.mongooseConnection;\nclass UserSchema {\n    static get schema() {\n        const schema = mongoose.Schema({\n            name: {\n                type: String,\n                required: true\n            },\n            password: {\n                type: String,\n                required: true\n            },\n            admin: {\n                type: Boolean,\n                required: true\n            }\n        });\n        return schema;\n    }\n}\nconst schema = mongooseConnection.model('Users', UserSchema.schema);\nexport default schema;\n//# sourceMappingURL=UserSchema.js.map"]}