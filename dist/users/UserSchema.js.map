{"version":3,"sources":["../../dist-esnext/users/UserSchema.js"],"names":["mongoose","mongooseInstance","mongooseConnection","UserSchema","userSchema","Schema","name","type","String","required","password","email","schema","model"],"mappings":";;;;;;;;AAAA;;;;;;;;AACA,IAAMA,WAAW,qBAAWC,gBAA5B;AACA,IAAMC,qBAAqB,qBAAWA,kBAAtC;;IACMC,U;;;;;;;4BACkB;AAChB,gBAAMC,aAAaJ,SAASK,MAAT,CAAgB;AAC/BC,sBAAM;AACFC,0BAAMC,MADJ;AAEFC,8BAAU;AAFR,iBADyB;AAK/BC,0BAAU;AACNH,0BAAMC,MADA;AAENC,8BAAU;AAFJ,iBALqB;AAS/BE,uBAAO;AACHJ,0BAAMC,MADH;AAEHC,8BAAU;AAFP;AATwB,aAAhB,CAAnB;AAcA,mBAAOL,UAAP;AACH;;;;;;AAEL,IAAMQ,SAASV,mBAAmBW,KAAnB,CAAyB,OAAzB,EAAkCV,WAAWS,MAA7C,CAAf;kBACeA,M;AACf","file":"UserSchema.js","sourcesContent":["import DataAccess from '../core/DataAccess';\nconst mongoose = DataAccess.mongooseInstance;\nconst mongooseConnection = DataAccess.mongooseConnection;\nclass UserSchema {\n    static get schema() {\n        const userSchema = mongoose.Schema({\n            name: {\n                type: String,\n                required: true\n            },\n            password: {\n                type: String,\n                required: true\n            },\n            email: {\n                type: String,\n                required: true\n            }\n        });\n        return userSchema;\n    }\n}\nconst schema = mongooseConnection.model('Users', UserSchema.schema);\nexport default schema;\n//# sourceMappingURL=UserSchema.js.map"]}