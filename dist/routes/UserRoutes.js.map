{"version":3,"sources":["../../dist-esnext/routes/UserRoutes.js"],"names":["UserController","router","Router","getUserRoutes","userRepository","createUser","post","authUserForm","authUser","getByUserNameOrEmail","encode","authenticateUser","verifyToken","use"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;AAEA;;IAAYA,c;;;;;;;AADZ;;;AAEA,IAAMC,SAAS,kBAAQC,MAAR,EAAf;AACA,IAAMC;AAAA,yDAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACW,8EAA2C,OAA3C,CADX;;AAAA;AACZC,sCADY;AAAA,sCAElBH,MAFkB;AAAA,sCAEID,cAFJ;AAAA;AAAA,+BAEoC,0BAAS,EAAEI,8BAAF,EAAT,CAFpC;;AAAA;AAAA;AAAA,kDAEmBC,UAFnB;;AAAA,oCAEXC,IAFW,mBAEN,QAFM;;AAAA,sCAGlBL,MAHkB;AAAA,sCAGeD,cAHf;AAAA;AAAA,+BAGqD,8BAAa,EAAEO,yCAAF;AAChFC,sCAAU,0BAASJ,eAAeK,oBAAxB,CADsE;AAEhFC,oCAAQ,iDAFwE,EAAb,CAHrD;;AAAA;AAAA;AAAA,kDAG8BC,gBAH9B;;AAAA,oCAGXL,IAHW,mBAGN,mBAHM;;AAAA,sCAMlBL,MANkB;AAAA,sCAMPD,cANO;AAAA;AAAA,+BAM0B,qDAN1B;;AAAA;AAAA;AAAA,mDAMQY,WANR;;AAAA,oCAMXC,GANW;;AAAA,yDAOXZ,MAPW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;QASSE,a,GAAAA,a;AACT","file":"UserRoutes.js","sourcesContent":["import { authUser, cDecode, cEncode, getAuthToken, saveUser, tokenSecret, verifyAuthToken } from '@alanmarcell/ptz-user-app';\nimport { authUserForm } from '@alanmarcell/ptz-user-domain';\nimport { createUserRepository } from '@alanmarcell/ptz-user-repository';\nimport express from 'express';\nimport { DB_CONNECTION_STRING } from '../config/constants';\n// import { log } from '../index';\nimport * as UserController from '../users/UserController';\nconst router = express.Router();\nconst getUserRoutes = async () => {\n    const userRepository = await createUserRepository(DB_CONNECTION_STRING, 'users');\n    router.post('/users', UserController.createUser(await saveUser({ userRepository })));\n    router.post('/authenticateUser', UserController.authenticateUser(await getAuthToken({ authUserForm,\n        authUser: authUser(userRepository.getByUserNameOrEmail),\n        encode: cEncode(tokenSecret) })));\n    router.use(UserController.verifyToken(await verifyAuthToken(cDecode)));\n    return router;\n};\nexport { getUserRoutes };\n//# sourceMappingURL=UserRoutes.js.map"]}