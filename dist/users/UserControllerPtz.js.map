{"version":3,"sources":["../../dist-esnext/users/UserControllerPtz.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserControllerPtz.js","sourcesContent":["// import { DB_CONNECTION_STRING } from '../config/constants';\n// import { log } from '../index';\n// import cors from 'cors';\n// import express from 'express';\n// import { MongoClient } from 'mongodb';\n// import { UserApp } from 'ptz-user-app';\n// import { UserRepository } from 'ptz-user-repository';\n// // import logFile from 'ptz-log-file';\n// // const log = logFile({ dir: './logs' });\n// const app = express();\n// app.use(cors());\n// log('starting server');\n// const PORT = 3011;\n// function getRunningUrl(path) {\n//   return `http://localhost:${PORT}${path}`;\n// }\n// async function createConnection() {\n//   try {\n//     const db = await MongoClient.connect(DB_CONNECTION_STRING);\n//     const userApp = new UserApp({\n//       userRepository: new UserRepository(db),\n//       log\n//     });\n//     console.log(getRunningUrl('userApp'));\n//     // await userApp.seed();\n//     // return userApp;\n//   } catch (e) { console.log(e); }\n// }\n// async function createUser(){\n//     await userApp.saveUser(userArgs)\n// }\n// export {\n//   createConnection\n// }\n//# sourceMappingURL=UserControllerPtz.js.map"]}