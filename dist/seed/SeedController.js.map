{"version":3,"sources":["../../dist-esnext/seed/SeedController.js"],"names":["req","res","console","log","send","error","seedUsers"],"mappings":";;;;;;;;yDAIA,iBAAyBA,GAAzB,EAA8BC,GAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQC,gCAAQC,GAAR,CAAY,iBAAZ;AACA;AAHR;AAAA,+BAI0B,0CAJ1B;;AAAA;AAIcF,4BAJd;;AAKQC,gCAAQC,GAAR,CAAYF,IAAZ;AACA;AACA;AACA;AACA;AATR;AAAA;;AAAA;AAAA;AAAA;;AAYQ;AACAA,4BAAIG,IAAJ,CAAS,EAAEC,OAAO,uBAAT,EAAT;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,S;;;;;AAJf;;AAGA;;;AAFA;AACA;;;QAkBSA,S,GAAAA,S;AACT","file":"SeedController.js","sourcesContent":["import { createConnection } from '../core/BaseRepositoryPtz';\n// import { DB_CONNECTION_STRING } from '../config/constants';\n// import { getDb, getUserApp } from '../core/BaseRepositoryPtz';\nimport { log } from '../index';\nasync function seedUsers(req, res) {\n    try {\n        console.log('SEED_CONTROLLER');\n        // const param: string = req.params.param;\n        const res = await createConnection();\n        console.log(res);\n        // UserBusiness.findUser(param, (error, result) => {\n        //   if (error) res.send({ error });\n        //   else res.send(result);\n        // });\n    }\n    catch (e) {\n        log(e);\n        res.send({ error: 'error in your request' });\n    }\n}\nexport { seedUsers };\n//# sourceMappingURL=SeedController.js.map"]}