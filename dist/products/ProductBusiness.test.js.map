{"version":3,"sources":["../../dist-esnext/products/ProductBusiness.test.js"],"names":["should","productBusiness","productCreatedID","createRes","newProduct","category","name","price","updateProduct","before","Promise","resolve","reject","create","error","result","_id","describe","it","be","equal","retrieveRes","retrieve","an","createdProd","find","prod","equals","deep","findRes","findById","update","ok","not","delete","toString"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AACA;AACA,eAAKA,MAAL;AACA,IAAMC,kBAAkB,+BAAxB;AACA,IAAIC,yBAAJ;AACA,IAAIC,kBAAJ;AACA,IAAMC,aAAa;AACfC,cAAU,aADK;AAEfC,UAAM,SAFS;AAGfC,WAAO;AAHQ,CAAnB;AAKA,IAAMC,gBAAgB;AAClBH,cAAU,sBADQ;AAElBC,UAAM,kBAFY;AAGlBC,WAAO;AAHW,CAAtB;AAKAE,OAAO,uBAAP,EAAgC,YAAM;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCX,wBAAgBY,MAAhB,CAAuBT,UAAvB,EAAmC,UAACU,KAAD,EAAQC,MAAR,EAAmB;AAClDZ,wBAAYY,UAAUD,KAAtB;AACAH,oBAAQT,mBAAmBa,OAAOC,GAAlC;AACH,SAHD;AAIH,KALM,CAAP;AAMH,CAPD;AAQAC,SAAS,iBAAT,EAA4B,YAAM;AAC9BA,aAAS,QAAT,EAAmB,YAAM;AACrBC,WAAG,wBAAH,EAA6B,YAAM;AAC/Bf,sBAAUE,QAAV,CAAmBL,MAAnB,CAA0BmB,EAA1B,CAA6BC,KAA7B,CAAmChB,WAAWC,QAA9C;AACH,SAFD;AAGH,KAJD;AAKA,QAAIgB,oBAAJ;AACAZ,WAAO,eAAP,EAAwB,YAAM;AAC1BR,wBAAgBqB,QAAhB,CAAyB,UAACR,KAAD,EAAQC,MAAR;AAAA,mBAAmBM,cAAcN,UAAUD,KAA3C;AAAA,SAAzB;AACH,KAFD;AAGAG,aAAS,UAAT,EAAqB,YAAM;AACvBC,WAAG,2BAAH,EAAgC,YAAM;AAClCG,wBAAYrB,MAAZ,CAAmBmB,EAAnB,CAAsBI,EAAtB,CAAyB,OAAzB;AACH,SAFD;AAGAL,WAAG,8BAAH,EAAmC,YAAM;AACrC,gBAAMM,cAAcH,YAAYI,IAAZ,CAAiB,UAACC,IAAD;AAAA,uBAAU,gBAAEC,MAAF,CAASD,KAAKV,GAAd,EAAmBd,gBAAnB,CAAV;AAAA,aAAjB,CAApB;AACAsB,wBAAYR,GAAZ,CAAgBhB,MAAhB,CAAuBmB,EAAvB,CAA0BS,IAA1B,CAA+BR,KAA/B,CAAqClB,gBAArC;AACH,SAHD;AAIH,KARD;AASA,QAAI2B,gBAAJ;AACApB,WAAO,YAAP,EAAqB,YAAM;AACvBR,wBAAgB6B,QAAhB,CAAyB5B,gBAAzB,EAA2C,UAACY,KAAD,EAAQC,MAAR,EAAmB;AAC1Dc,sBAAUd,UAAUD,KAApB;AACH,SAFD;AAGH,KAJD;AAKAG,aAAS,UAAT,EAAqB,YAAM;AACvBC,WAAG,4BAAH,EAAiC,YAAM;AACnCW,oBAAQb,GAAR,CAAYhB,MAAZ,CAAmBmB,EAAnB,CAAsBS,IAAtB,CAA2BR,KAA3B,CAAiClB,gBAAjC;AACA2B,oBAAQ7B,MAAR,CAAemB,EAAf,CAAkBI,EAAlB,CAAqB,QAArB;AACH,SAHD;AAIH,KALD;AAMAN,aAAS,QAAT,EAAmB,YAAM;AACrBC,WAAG,uBAAH,EAA4B,YAAM;AAC9BjB,4BAAgB8B,MAAhB,CAAuB7B,gBAAvB,EAAyCM,aAAzC,EAAwD,UAACM,KAAD,EAAQC,MAAR,EAAmB;AACvEA,uBAAOiB,EAAP,CAAUhC,MAAV,CAAiBiC,GAAjB,CAAqBd,EAArB,CAAwBC,KAAxB,CAA8B,GAA9B;AACAL,uBAAOf,MAAP,CAAcmB,EAAd,CAAiBI,EAAjB,CAAoB,QAApB;AACH,aAHD;AAIH,SALD;AAMH,KAPD;AAQAN,aAAS,QAAT,EAAmB,YAAM;AACrBC,WAAG,uBAAH,EAA4B,YAAM;AAC9BjB,4BAAgBiC,MAAhB,CAAuBhC,iBAAiBiC,QAAjB,EAAvB,EAAoD,UAACrB,KAAD,EAAQC,MAAR,EAAmB;AACnEA,uBAAOf,MAAP,CAAcmB,EAAd,CAAiBI,EAAjB,CAAoB,QAApB;AACAR,uBAAOA,MAAP,CAAciB,EAAd,CAAiBhC,MAAjB,CAAwBiC,GAAxB,CAA4Bd,EAA5B,CAA+BC,KAA/B,CAAqC,GAArC;AACH,aAHD;AAIH,SALD;AAMH,KAPD;AAQH,CA/CD;AAgDA","file":"ProductBusiness.test.js","sourcesContent":["import chai from 'chai';\nimport R from 'ramda';\nimport ProductBusiness from './ProductBusiness';\n// const should = require('chai').should();\nchai.should();\nconst productBusiness = new ProductBusiness();\nlet productCreatedID;\nlet createRes;\nconst newProduct = {\n    category: 'newCategory',\n    name: 'newName',\n    price: 10\n};\nconst updateProduct = {\n    category: 'updatedCategoryToDEl',\n    name: 'updatedNameToDel',\n    price: 10\n};\nbefore('should create product', () => {\n    return new Promise((resolve, reject) => {\n        productBusiness.create(newProduct, (error, result) => {\n            createRes = result || error;\n            resolve(productCreatedID = result._id);\n        });\n    });\n});\ndescribe('ProductBusiness', () => {\n    describe('Create', () => {\n        it('should create products', () => {\n            createRes.category.should.be.equal(newProduct.category);\n        });\n    });\n    let retrieveRes;\n    before('retrieve prod', () => {\n        productBusiness.retrieve((error, result) => retrieveRes = result || error);\n    });\n    describe('Retrieve', () => {\n        it('should retrieve products ', () => {\n            retrieveRes.should.be.an('array');\n        });\n        it('should have created product ', () => {\n            const createdProd = retrieveRes.find((prod) => R.equals(prod._id, productCreatedID));\n            createdProd._id.should.be.deep.equal(productCreatedID);\n        });\n    });\n    let findRes;\n    before('find prods', () => {\n        productBusiness.findById(productCreatedID, (error, result) => {\n            findRes = result || error;\n        });\n    });\n    describe('FindById', () => {\n        it('should find products By Id', () => {\n            findRes._id.should.be.deep.equal(productCreatedID);\n            findRes.should.be.an('object');\n        });\n    });\n    describe('Update', () => {\n        it('should update product', () => {\n            productBusiness.update(productCreatedID, updateProduct, (error, result) => {\n                result.ok.should.not.be.equal('0');\n                result.should.be.an('object');\n            });\n        });\n    });\n    describe('Delete', () => {\n        it('should delete product', () => {\n            productBusiness.delete(productCreatedID.toString(), (error, result) => {\n                result.should.be.an('object');\n                result.result.ok.should.not.be.equal('1');\n            });\n        });\n    });\n});\n//# sourceMappingURL=ProductBusiness.test.js.map"]}