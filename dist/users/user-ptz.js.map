{"version":3,"sources":["../../dist-esnext/users/user-ptz.js"],"names":[],"mappingsfile":"user-ptz.js","sourcesContent":["// import express from 'express';\n// import { IAuthToken, ICreatedBy, IUserApp } from 'ptz-user-domain';\n// import IBaseController from '../core/IBaseController';\n// import { log } from '../index';\n// import { IUserModel } from './IUser';\n// import UserBusiness from './UserBusiness';\n// import { ILog } from 'ptz-log';\n// interface IUserControllerArgs {\n//   userApp: IUserApp;\n//   log: ILog;\n// }\n// function UserControllerPtz({ userApp, log }: IUserControllerArgs) {\n//   async function create(req: express.Request, res: express.Response) {\n//     try {\n//       // const userArgs: IUserModel = req.body as IUserModel;\n//       const userArgs = req.body;\n//       const savedUser = await userApp.saveUser({\n//         userArgs,\n//         authedUser: null // TODO: FIX IT! SEND createdBy from context\n//       });\n//       log('saved user:', savedUser);\n//       return savedUser;\n//     } catch (e) {\n//       log(e);\n//       res.send({ error: 'error in your request' });\n//     }\n//   }\n// }\n// export default UserControllerPtz;\n//   // update(req: express.Request, res: express.Response): void {\n//   //   try {\n//   //     const user: IUserModel = req.body as IUserModel;\n//   //     const id: string = req.params._id;\n//   //     const userBusiness = new UserBusiness();\n//   //     userBusiness.update(id, user, (error) => {\n//   //       if (error) res.send({ error: 'error' });\n//   //       else res.send({ success: 'success' });\n//   //     });\n//   //   } catch (e) {\n//   //     log(e);\n//   //     res.send({ error: 'error in your request' });\n//   //   }\n//   // }\n//   // delete (req: express.Request, res: express.Response): void {\n//   //   try {\n//   //     const id: string = req.params._id;\n//   //     const userBusiness = new UserBusiness();\n//   //     userBusiness.delete(id, (error) => {\n//   //       if (error) res.send({ error: 'error' });\n//   //       else res.send({ success: 'success' });\n//   //     });\n//   //   } catch (e) {\n//   //     log(e);\n//   //     res.send({ error: 'error in your request' });\n//   //   }\n//   // }\n//   // retrieve(req: express.Request, res: express.Response): void {\n//   //   try {\n//   //     const userBusiness = new UserBusiness();\n//   //     userBusiness.retrieve((error, result) => {\n//   //       if (error) res.send({ error: 'error' + req });\n//   //       else res.send(result);\n//   //     });\n//   //   } catch (e) {\n//   //     log(e);\n//   //     res.send({ error: 'error in your request' });\n//   //   }\n//   // }\n//   // findById(req: express.Request, res: express.Response): void {\n//   //   try {\n//   //     const id: string = req.params._id;\n//   //     const userBusiness = new UserBusiness();\n//   //     userBusiness.findById(id, (error, result) => {\n//   //       if (error) res.send({ error: 'error' });\n//   //       else res.send(result);\n//   //     });\n//   //   } catch (e) {\n//   //     log(e);\n//   //     res.send({ error: 'error in your request' });\n//   //   }\n//   // }\n//   // findOne(req: express.Request, res: express.Response): void {\n//   //   try {\n//   //     const param: string = req.params.param;\n//   //     const userBusiness = new UserBusiness();\n//   //     userBusiness.findOne(param, (error, result) => {\n//   //       if (error) res.send({ error: 'error' });\n//   //       else res.send(result);\n//   //     });\n//   //   } catch (e) {\n//   //     log(e);\n//   //     res.send({ error: 'error in your request' });\n//   //   }\n//   // }\n// // class UserController implements IBaseController<UserBusiness> {\n// //   create(req: express.Request, res: express.Response): void {\n// //     try {\n// //       const userArgs: IUserModel = req.body as IUserModel;\n// //       const savedUser = await userApp.saveUser({\n// //         userArgs,\n// //         authedUser: null // TODO: FIX IT! SEND createdBy from context\n// //       });\n// //       const userBusiness = new UserBusiness();\n// //       userBusiness.create(user, (error) => {\n// //         if (error) res.send({ error: 'error' });\n// //         else res.send({ success: 'success' });\n// //       });\n// //     } catch (e) {\n// //       log(e);\n// //       res.send({ error: 'error in your request' });\n// //     }\n// //   }\n// //   update(req: express.Request, res: express.Response): void {\n// //     try {\n// //       const user: IUserModel = req.body as IUserModel;\n// //       const id: string = req.params._id;\n// //       const userBusiness = new UserBusiness();\n// //       userBusiness.update(id, user, (error) => {\n// //         if (error) res.send({ error: 'error' });\n// //         else res.send({ success: 'success' });\n// //       });\n// //     } catch (e) {\n// //       log(e);\n// //       res.send({ error: 'error in your request' });\n// //     }\n// //   }\n// //   delete(req: express.Request, res: express.Response): void {\n// //     try {\n// //       const id: string = req.params._id;\n// //       const userBusiness = new UserBusiness();\n// //       userBusiness.delete(id, (error) => {\n// //         if (error) res.send({ error: 'error' });\n// //         else res.send({ success: 'success' });\n// //       });\n// //     } catch (e) {\n// //       log(e);\n// //       res.send({ error: 'error in your request' });\n// //     }\n// //   }\n// //   retrieve(req: express.Request, res: express.Response): void {\n// //     try {\n// //       const userBusiness = new UserBusiness();\n// //       userBusiness.retrieve((error, result) => {\n// //         if (error) res.send({ error: 'error' + req });\n// //         else res.send(result);\n// //       });\n// //     } catch (e) {\n// //       log(e);\n// //       res.send({ error: 'error in your request' });\n// //     }\n// //   }\n// //   findById(req: express.Request, res: express.Response): void {\n// //     try {\n// //       const id: string = req.params._id;\n// //       const userBusiness = new UserBusiness();\n// //       userBusiness.findById(id, (error, result) => {\n// //         if (error) res.send({ error: 'error' });\n// //         else res.send(result);\n// //       });\n// //     } catch (e) {\n// //       log(e);\n// //       res.send({ error: 'error in your request' });\n// //     }\n// //   }\n// //   findOne(req: express.Request, res: express.Response): void {\n// //     try {\n// //       const param: string = req.params.param;\n// //       const userBusiness = new UserBusiness();\n// //       userBusiness.findOne(param, (error, result) => {\n// //         if (error) res.send({ error: 'error' });\n// //         else res.send(result);\n// //       });\n// //     } catch (e) {\n// //       log(e);\n// //       res.send({ error: 'error in your request' });\n// //     }\n// //   }\n// // }\n// // export default UserController;\n//# sourceMappingURL=user-ptz.js.map"]}