{"version":3,"sources":["../../dist-esnext/products/ProductController.js"],"names":["ProductController","req","res","product","body","productBusiness","create","error","send","success","e","id","params","_id","update","delete","pagConfig","retrieve","result","start","items","findById"],"mappings":"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","file":"ProductController.js","sourcesContent":["import { log } from '../index';\nimport ProductBusiness from './ProductBusiness';\nclass ProductController {\n    create(req, res) {\n        try {\n            const product = req.body;\n            const productBusiness = new ProductBusiness();\n            productBusiness.create(product, (error) => {\n                if (error)\n                    res.send({ error: 'error create controller' });\n                else\n                    res.send({ success: 'success' });\n            });\n        }\n        catch (e) {\n            log(e);\n            res.send({ error: 'error in your request' });\n        }\n    }\n    update(req, res) {\n        try {\n            const product = req.body;\n            const id = req.params._id;\n            const productBusiness = new ProductBusiness();\n            productBusiness.update(id, product, (error) => {\n                if (error)\n                    res.send({ error: 'error update controller' });\n                else\n                    res.send({ success: 'success' });\n            });\n        }\n        catch (e) {\n            log(e);\n            res.send({ error: 'error in your request' });\n        }\n    }\n    delete(req, res) {\n        try {\n            const id = req.params._id;\n            const productBusiness = new ProductBusiness();\n            productBusiness.delete(id, (error) => {\n                if (error)\n                    res.send({ error: 'error delete controller' });\n                else\n                    res.send({ success: 'success' });\n            });\n        }\n        catch (e) {\n            log(e);\n            res.send({ error: 'error in your request' });\n        }\n    }\n    retrieve(req, res) {\n        const pagConfig = req.body;\n        try {\n            const productBusiness = new ProductBusiness();\n            productBusiness.retrieve((error, result) => {\n                if (error)\n                    res.send({ error: 'error retrieve' });\n                else\n                    res.send(result);\n            }, pagConfig.start, pagConfig.items);\n        }\n        catch (e) {\n            log(e);\n            res.send({ error: 'error in your request' });\n        }\n    }\n    findById(req, res) {\n        try {\n            const id = req.params._id;\n            const productBusiness = new ProductBusiness();\n            productBusiness.findById(id, (error, result) => {\n                if (error)\n                    res.send({ error: 'error findById' });\n                else\n                    res.send(result);\n            });\n        }\n        catch (e) {\n            log(e);\n            res.send({ error: 'error in your request' });\n        }\n    }\n}\nexport default ProductController;\n//# sourceMappingURL=ProductController.js.map"]}